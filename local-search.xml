<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>标题</title>
    <link href="/2024/08/07/1_%E6%A0%87%E9%A2%98%E6%98%AF%E5%9C%A8%E5%93%AA%E6%90%9E%E7%9A%84%E8%B6%85%E9%93%BE%E6%8E%A5/"/>
    <url>/2024/08/07/1_%E6%A0%87%E9%A2%98%E6%98%AF%E5%9C%A8%E5%93%AA%E6%90%9E%E7%9A%84%E8%B6%85%E9%93%BE%E6%8E%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="标题是在哪搞的超链接"><a href="#标题是在哪搞的超链接" class="headerlink" title="标题是在哪搞的超链接"></a><a href="https://github.com/Lookofsea/Myblog/issues/1">标题是在哪搞的超链接</a></h1><p>不用issue提交，就不会产生超链接</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>翻转字符串里的单词</title>
    <link href="/2024/08/07/2_151.%E7%BF%BB%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%87%8C%E7%9A%84%E5%8D%95%E8%AF%8D/"/>
    <url>/2024/08/07/2_151.%E7%BF%BB%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%87%8C%E7%9A%84%E5%8D%95%E8%AF%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="151-翻转字符串里的单词"><a href="#151-翻转字符串里的单词" class="headerlink" title="151.翻转字符串里的单词"></a>151.翻转字符串里的单词</h1><p>151.翻转字符串里的单词<br><a href="https://leetcode.cn/problems/reverse-words-in-a-string/">力扣题目链接(opens new window)</a></p><p>给定一个字符串，逐个翻转字符串中的每个单词</p><p>示例 1：<br>输入: “the sky is blue”<br>输出: “blue is sky the”</p><p>示例 2：<br>输入: “  hello world!  “<br>输出: “world! hello”<br>解释: 输入字符串可以在前面或者后面包含多余的空格，但是反转后的字符不能包括。</p><p>示例 3：<br>输入: “a good   example”<br>输出: “example good a”<br>解释: 如果两个单词间有多余的空格，将反转后单词间的空格减少到只含一个</p><h2 id="复杂度分析："><a href="#复杂度分析：" class="headerlink" title="复杂度分析："></a>复杂度分析：</h2><p>时间复杂度 O(N)O(N)O(N) ： 其中 NNN 为字符串 sss 的长度，线性遍历字符串。<br>空间复杂度 O(N)O(N)O(N) ： 新建的 list(Python) 或 StringBuilder(Java) 中的字符串总长度 ≤N\leq N≤N ，占用 O(N)O(N)O(N) 大小的额外空间。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">reverseWords</span><span class="hljs-params">(String s)</span> &#123;<br>        s = s.trim();                                    <span class="hljs-comment">// 删除首尾空格</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> s.length() - <span class="hljs-number">1</span>, i = j;<br>        <span class="hljs-type">StringBuilder</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>();<br>        <span class="hljs-keyword">while</span> (i &gt;= <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">while</span> (i &gt;= <span class="hljs-number">0</span> &amp;&amp; s.charAt(i) != <span class="hljs-string">&#x27; &#x27;</span>) i--;     <span class="hljs-comment">// 搜索首个空格</span><br>            res.append(s.substring(i + <span class="hljs-number">1</span>, j + <span class="hljs-number">1</span>) + <span class="hljs-string">&quot; &quot;</span>); <span class="hljs-comment">// 添加单词</span><br>            <span class="hljs-keyword">while</span> (i &gt;= <span class="hljs-number">0</span> &amp;&amp; s.charAt(i) == <span class="hljs-string">&#x27; &#x27;</span>) i--;     <span class="hljs-comment">// 跳过单词间空格</span><br>            j = i;                                       <span class="hljs-comment">// j 指向下个单词的尾字符</span><br>        &#125;<br>        <span class="hljs-keyword">return</span> res.toString().trim();                    <span class="hljs-comment">// 转化为字符串并返回</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
